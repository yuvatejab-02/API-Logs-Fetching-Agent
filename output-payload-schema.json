{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Incident Data Output Payload Schema",
    "description": "Schema for incident data fetch completion payloads. Contains S3 URLs for fetched logs, metrics, and traces from SigNoz.",
    "type": "object",
    "properties": {
      "type": {
        "description": "Message type identifier",
        "type": "string",
        "const": "log-fetcher-response"
      },
      "incident": {
        "description": "Core incident information from the original request",
        "type": "object",
        "properties": {
          "incident_id": {
            "description": "Unique incident identifier",
            "type": "string",
            "pattern": "^INC_[a-zA-Z0-9_]+$",
            "minLength": 1
          },
          "company_id": {
            "description": "Company/tenant identifier",
            "type": "string",
            "minLength": 1
          },
          "service": {
            "description": "Name of the affected service",
            "type": "string",
            "minLength": 1
          },
          "env": {
            "description": "Deployment environment",
            "type": "string",
            "enum": ["dev", "staging", "prod", "production"]
          }
        },
        "required": ["incident_id", "company_id", "service", "env"],
        "additionalProperties": false
      },
      "sources": {
        "description": "Data sources that provided data for this incident, with S3 URLs for each signal type",
        "type": "object",
        "properties": {
          "signoz": {
            "description": "SigNoz data source URLs (logs, traces, metrics)",
            "type": "object",
            "properties": {
              "logs": {
                "description": "S3 URL for SigNoz logs data",
                "type": "string",
                "pattern": "^https://[a-z0-9-]+\\.s3\\.[a-z0-9-]+\\.amazonaws\\.com/raw/[a-z0-9-]+/[a-z0-9-]+/[a-z0-9-]+/logs/date=[0-9-]+/hour=[0-9]+/incident_id=[A-Z_0-9]+/window=[0-9-]+/seq=[0-9]+/part-[0-9]+\\.json\\.gz$"
              },
              "traces": {
                "description": "S3 URL for SigNoz traces data",
                "type": "string",
                "pattern": "^https://[a-z0-9-]+\\.s3\\.[a-z0-9-]+\\.amazonaws\\.com/raw/[a-z0-9-]+/[a-z0-9-]+/[a-z0-9-]+/traces/date=[0-9-]+/hour=[0-9]+/incident_id=[A-Z_0-9]+/window=[0-9-]+/seq=[0-9]+/part-[0-9]+\\.json\\.gz$"
              },
              "metrics": {
                "description": "S3 URL for SigNoz metrics data",
                "type": "string",
                "pattern": "^https://[a-z0-9-]+\\.s3\\.[a-z0-9-]+\\.amazonaws\\.com/raw/[a-z0-9-]+/[a-z0-9-]+/[a-z0-9-]+/metrics/date=[0-9-]+/hour=[0-9]+/incident_id=[A-Z_0-9]+/window=[0-9-]+/seq=[0-9]+/part-[0-9]+\\.json\\.gz$"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    },
    "required": ["type", "incident", "sources"],
    "additionalProperties": false,
    "notes": {
      "usage": [
        "This schema validates incident data fetch completion payloads",
        "Type field identifies this as a 'log-fetcher-response' message",
        "Contains S3 HTTPS URLs for accessing fetched logs, metrics, and traces from SigNoz",
        "URLs follow partitioned structure: raw/env/tenant/service/signal/date/hour/incident_id/window/seq/part-*.json.gz",
        "Each signal type (logs, traces, metrics) has its own S3 URL"
      ],
      "url_structure": [
        "Base pattern: https://bucket.s3.region.amazonaws.com/raw/env/tenant/service/signal/date=YYYY-MM-DD/hour=HH/incident_id=ID/window=start-end/seq=SEQ/part-PART.json.gz",
        "Partitioned by date, hour, incident for optimal S3 performance"
      ],
      "data_sources": [
        "signoz: Provides logs, traces, and metrics",
        "Only SigNoz is currently supported as a data source"
      ],
      "validation_rules": [
        "Type must be 'log-fetcher-response'",
        "Incident ID must match pattern: INC_[alphanumeric_]+",
        "Service names must be lowercase alphanumeric with hyphens",
        "Environment must be one of: dev, staging, prod, production",
        "S3 URLs must follow exact partitioned path structure"
      ]
    }
  }